@{ 
    var Grid = (int[,])ViewData["Grid"];
}
<h2 style="text-align: center;">Game of Life</h2>

<form asp-controller="Home" asp-action="Toggle" name="game-grid" id="game-grid" method="post">
    <div class="grid-container">
        @for (int i = 1; i < Grid.GetLength(0)-1; i++)
        {
            <span class="grid-row">
                @for (int j = 1; j < Grid.GetLength(1)-1; j++)
                {
                    //For loops skip the outside egde because it's the dead zone.
                    if (Grid[i, j] == 0)
                    {
                        <button type="button" name="cell" id="@i@j" class="grid" onclick="Toggle('@i,@j')">@i,@j</button>
                    }
                    if (Grid[i, j] == 1)
                    {
                        <button type="button" name="cell" id="@i@j" class="grid active" onclick="Toggle('@i,@j')">@i,@j</button>
                    }
                    //In case we ever did display the dead zone, show it red, I had set the values to 2
                    if (Grid[i, j] == 2)
                    {
                        <button type="button" name="cell" id="@i@j" class="grid error" onclick="Toggle('@i,@j')">@i,@j</button>
                    }
                }
            </span>
            <br/>
        }
    </div>
</form>

<form asp-controller="Home" asp-action="AdvanceGame" method="post">
    <button type="submit" style="margin-top: 20px;">Advance</button>
</form>

<script>
    function Toggle(cell) {
        var data = { 'cell': cell };
        var selector = '#'.concat(cell);
        selector = selector.replace(',', '');
        $(selector).toggleClass('active');
        $.ajax({
            type: "POST",
            url: "/Home/Toggle",
            data: data,
            async: true,
            success: function (msg) {
            },
            error: function () {
                return "error";
            }
        });
    }
</script>