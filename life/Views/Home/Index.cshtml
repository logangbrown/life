@{
    var Grid = (int[,])ViewData["Grid"];
}

<div class="grid-container" style="text-align: center;">
    <h2>Conway's Game of Life</h2>
    <h4>WSU CS 3750</h4>
    @for (int i = 1; i < Grid.GetLength(0) - 1; i++)
    {
        <span class="grid-row">
            @for (int j = 1; j < Grid.GetLength(1) - 1; j++)
            {
                //For loops skip the outside egde because it's the dead zone.
                if (Grid[i, j] == 0)
                {
                    <button type="button" name="cell" id="@i-@j" class="grid" onclick="Toggle('@i,@j')">@i,@j</button>
                }
                if (Grid[i, j] == 1)
                {
                    <button type="button" name="cell" id="@i-@j" class="grid active" onclick="Toggle('@i,@j')">@i,@j</button>
                }
            }
        </span>
        <br />
    }

    <div style="margin-top: 20px; line-height: 12px; font-size: 12pt;">
        <button type="button" onclick="Start()" class="btn btn-success">Start</button>
        <button type="button" onclick="Stop()" style="margin-left:20px;" class="btn btn-danger">Stop</button>
        <button type="button" onclick="Clear()" style="margin-left:20px;" class="btn btn-warning">Clear</button>
        <button type="button" onclick="Next()" style="margin-left:20px;" class="btn btn-primary">Next</button>
        <br />
        <div>
            <div class="input-group" style="width: 320px; margin: 20px auto;">
                <input type="number" min="250" class="form-control" id="milliseconds" placeholder="Update interval in milliseconds...">
                <span class="input-group-btn">
                    <button class="btn btn-info" type="button" onclick="ChangeTimer()">Update</button>
                </span>
            </div>
        </div>
    </div>
</div>

<script>
    var scheme = document.location.protocol == "https:" ? "wss" : "ws";
    var port = document.location.port ? (":" + document.location.port) : "";
    var connectionUrl = scheme + "://" + document.location.hostname + port + "/ws";

    var socket;



    window.onload = function ()
    {

      socket = new WebSocket(connectionUrl);

        socket.onmessage = function (event) {

            var jsonData = JSON.parse(event.data);
            @{
            for (int i = 1; i < Grid.GetLength(0) - 1; i++)
            {
                for (int j = 1; j < Grid.GetLength(1) - 1; j++)
                {
                    <text>
                    if (jsonData[@i][@j] == 1)
                    {
                        $("#@i-@j").addClass("active");
                    }
                    else
                    {
                         $("#@i-@j").removeClass("active");
                    }
                    </text>
            }
        }

    }
    };

    }





    function Toggle(cell) {
        var data = { 'cell': cell };
        var selector = '#'.concat(cell);
        selector = selector.replace(',', '-');
        $(selector).toggleClass('active');
        $.ajax({
            type: "POST",
            url: "/Home/Toggle",
            data: data,
            async: true
        });
    }

    function Start() {
        $.ajax({
            type: "POST",
            url: "/Home/Start",
            async: true
        });
    }

    function Stop() {
        $.ajax({
            type: "POST",
            url: "/Home/Stop",
            async: true
        });
    }

    function Clear() {
        $.ajax({
            type: "POST",
            url: "/Home/Clear",
            async: true
        });
    }

    function Next() {
        $.ajax({
            type: "POST",
            url: "/Home/AdvanceGame",
            async: true
        });
    }

    function ChangeTimer() {
        var milliseconds = $('#milliseconds').val();
        var data = { 'milliseconds': milliseconds };
        $.ajax({
            type: "POST",
            url: "/Home/ChangeTime",
            async: true,
            data: data
        });
    }

    @*(function poll() {
        setTimeout(function () {
            $.ajax({
                type: "POST",
                url: "/Home/Update",
                success: function (data) {
                    @{
                    for (int i = 1; i < Grid.GetLength(0) - 1; i++)
                    {
                        for (int j = 1; j < Grid.GetLength(1) - 1; j++)
                        {
                            <text>
                            if (data[@i][@j] == 1)
                            {
                                $("#@i-@j").addClass("active");
                                }
                            else
                            {
                                $("#@i-@j").removeClass("active");
                                }
                            </text>
                        }
                    }
                }
                },
                complete: poll
            });
        }, 250);
    })();*@

</script>

@*<button id="BtnStart">Start</button>
<script>
    var btnStart = document.getElementById("BtnStart");
    btnStart.addEventListener("click", function (e) {
        e.preventDefault();

        socket.onclose = function (e) {
            console.log("socket closed", e);
        };

        socket.onmessage = function (e) {
            console.log(e);
            socket.send("pong");
        };

        socket.onerror = function (e) {
            console.error(e.data);
        };
    });
</script>*@